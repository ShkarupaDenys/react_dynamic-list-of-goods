{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","concat","name","id","getAll","fetch","then","response","json","get5First","sort","a","b","localeCompare","slice","getRedGoods","filter","App","_useState","useState","_useState2","_slicedToArray","setGoods","getGoods","_asyncToGenerator","_regeneratorRuntime","mark","_callee","callback","items","wrap","_context","prev","next","sent","stop","_x","apply","arguments","_jsxs","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAM,GAADC,OAAKH,EAAKE,QAAUJ,SAEjCE,EAAKI,MAJDJ,EAAKK,UCNLC,EAAS,WAAH,OAA0BC,MAFhC,yEAGVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAEhBC,EAAY,WAAH,OAASL,IAC5BE,MAAK,SAAAZ,GAAK,OAAIA,EACZgB,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAET,KAAKW,cAAcD,EAAEV,SACtCY,MAAM,EAAG,OAEDC,EAAc,WAAH,OAASX,IAC9BE,MAAK,SAAAZ,GAAK,OAAIA,EACZsB,QAAO,SAAAvB,GAAQ,MAAiB,QAAjBA,EAALO,aCRFiB,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCxB,EAAK0B,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAQ,eAAA9B,EAAA+B,YAAAC,IAAAC,MAAG,SAAAC,EAAOC,GAA+B,IAAAC,EAAA,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjCL,IAAW,KAAD,EAAxBC,EAAKE,EAAAG,KAEXZ,EAASO,GAAO,wBAAAE,EAAAI,UAAAR,OACjB,gBAJaS,GAAA,OAAA3C,EAAA4C,MAAA,KAAAC,YAAA,GAYd,OACEC,eAAA,OAAKC,UAAU,MAAK5C,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACE8C,KAAK,SACL,UAAQ,aACRC,QAbU,WAAH,OAASnB,EAASnB,IAaRR,SAClB,mBAIDD,cAAA,UACE8C,KAAK,SACL,UAAQ,oBACRC,QAnBY,WAAH,OAASnB,EAASd,IAmBRb,SACpB,uBAIDD,cAAA,UACE8C,KAAK,SACL,UAAQ,aACRC,QAzBU,WAAH,OAASnB,EAASR,IAyBRnB,SAClB,mBAIDD,cAACH,EAAS,CAACE,MAAOA,QC/CxBiD,IAASC,OACPjD,cAACsB,EAAG,IACJ4B,SAASC,eAAe,W","file":"static/js/main.bcd6a131.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport const getAll = (): Promise<Good[]> => fetch(API_URL)\n  .then(response => response.json());\n\nexport const get5First = () => getAll()\n  .then(goods => goods\n    .sort((a, b) => a.name.localeCompare(b.name))\n    .slice(0, 5));\n\nexport const getRedGoods = () => getAll()\n  .then(goods => goods\n    .filter(({ color }) => color === 'red'));\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getGoods = async (callback: () => Promise<Good[]>) => {\n    const items = await callback();\n\n    setGoods(items);\n  };\n\n  const loadAll = () => getGoods(getAll);\n\n  const load5Firs = () => getGoods(get5First);\n\n  const loadRed = () => getGoods(getRedGoods);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={loadAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={load5Firs}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={loadRed}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}